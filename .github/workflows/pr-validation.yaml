# PR Validation workflow
# Validates that PR titles follow conventional commit standards
# and enforces commit message conventions

name: PR Validation

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

permissions:
  pull-requests: read

jobs:
  validate-pr:
    name: Validate PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title follows conventional commits
        uses: amannn/action-semantic-pull-request@v5
        with:
          # Configure which types are allowed
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          # Require a scope (optional)
          requireScope: false
          # Disallow uppercase in subject
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
          # Validate the entire PR title
          validateSingleCommit: false
          # Ignore merge commits
          ignoreLabels: |
            ignore-semantic-pull-request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlintrc.json
          failOnWarnings: false
          helpURL: https://www.conventionalcommits.org/
