# GoReleaser configuration for DigitalOcean Firewall Allowlister
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json

version: 2

# Global environment variables
env:
  - CGO_ENABLED=0

# Pre-build hooks
before:
  hooks:
    - go mod tidy
    - go generate ./...

# Build configuration
builds:
  - id: do-firewall-allowlister
    binary: do-firewall-allowlister
    main: ./cmd/do-firewall-allowlister
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    flags:
      - -trimpath

# Archive configuration
archives:
  - id: default
    ids:
      - do-firewall-allowlister
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: ["zip"]
    files:
      - README.md
      - LICENSE

# Checksum configuration
checksum:
  name_template: "checksums.txt"

# Snapshot configuration
snapshot:
  version_template: "{{ incpatch .Version }}-next"

# Docker configuration
dockers:
  # GitHub Container Registry (ghcr.io) - amd64
  - image_templates:
      - "ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}ghcr.io/kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    goarch: amd64
    goos: linux
  # GitHub Container Registry (ghcr.io) - arm64
  - image_templates:
      - "ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}ghcr.io/kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goarch: arm64
    goos: linux
  # Docker Hub - amd64
  - image_templates:
      - "kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    goarch: amd64
    goos: linux
  # Docker Hub - arm64
  - image_templates:
      - "kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goarch: arm64
    goos: linux
  # Quay.io - amd64
  - image_templates:
      - "quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}quay.io/kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    goarch: amd64
    goos: linux
  # Quay.io - arm64
  - image_templates:
      - "quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}quay.io/kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goarch: arm64
    goos: linux

# Docker manifest for multi-arch images
docker_manifests:
  # GitHub Container Registry (ghcr.io) manifests
  - name_template: "ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}"
    image_templates:
      - "ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - "ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
  - name_template: '{{ if not (env "IS_PRERELEASE" | eq "true") }}ghcr.io/kholisrag/do-firewall-allowlister:latest{{ end }}'
    image_templates:
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}ghcr.io/kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}ghcr.io/kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    skip_push: '{{ env "IS_PRERELEASE" | eq "true" }}'
  # Docker Hub manifests
  - name_template: "kholisrag/do-firewall-allowlister:{{ .Version }}"
    image_templates:
      - "kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - "kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
  - name_template: '{{ if not (env "IS_PRERELEASE" | eq "true") }}kholisrag/do-firewall-allowlister:latest{{ end }}'
    image_templates:
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    skip_push: '{{ env "IS_PRERELEASE" | eq "true" }}'
  # Quay.io manifests
  - name_template: "quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}"
    image_templates:
      - "quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}-amd64"
      - "quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}-arm64"
  - name_template: '{{ if not (env "IS_PRERELEASE" | eq "true") }}quay.io/kholisrag/do-firewall-allowlister:latest{{ end }}'
    image_templates:
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}quay.io/kholisrag/do-firewall-allowlister:latest-amd64{{ end }}'
      - '{{ if not (env "IS_PRERELEASE" | eq "true") }}quay.io/kholisrag/do-firewall-allowlister:latest-arm64{{ end }}'
    skip_push: '{{ env "IS_PRERELEASE" | eq "true" }}'

# Changelog configuration
changelog:
  sort: asc
  use: github
  # Format commits with author information
  format: "{{.SHA}}: {{.Message}} (@{{.AuthorUsername}})"
  # Abbreviate commit hashes
  abbrev: 7
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^style:"
      - "^refactor:"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - "^Bump "
      - "^Update "
  groups:
    - title: "üöÄ Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "üêõ Bug Fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "‚ö° Performance Improvements"
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "üí• Breaking Changes"
      regexp: '^.*?(\w+)(\([[:word:]]+\))?!:.+$'
      order: 3
    - title: "üîß Build & CI"
      regexp: '^.*?build(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: "üìö Documentation"
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 5
    - title: "üß™ Tests"
      regexp: '^.*?test(\([[:word:]]+\))??!?:.+$'
      order: 6
    - title: "üîÑ Reverts"
      regexp: '^.*?revert(\([[:word:]]+\))??!?:.+$'
      order: 7
    - title: "üì¶ Dependencies"
      regexp: '^.*?(deps|dep)(\([[:word:]]+\))??!?:.+$'
      order: 8
    - title: "üèóÔ∏è Others"
      order: 999

# Release configuration
release:
  # Set prerelease based on environment variable
  prerelease: auto
  mode: replace
  # Skip release if it already exists
  skip_upload: auto
  # Replace existing assets
  replace_existing_draft: true
  header: |
    ## Release {{ .Tag }}

    {{- if .Prerelease }}
    **This is a pre-release version.** It may contain bugs or incomplete features.
    Use at your own risk in production environments.
    {{- else }}
    **This is a stable release.** It has been tested and is ready for production use.
    {{- end }}

  footer: |
    ## Docker Images

    Multi-architecture Docker images are available from multiple registries:

    ### GitHub Container Registry
    ```bash
    docker pull ghcr.io/kholisrag/do-firewall-allowlister:{{ .Version }}
    docker pull ghcr.io/kholisrag/do-firewall-allowlister:latest
    ```

    ### Docker Hub
    ```bash
    docker pull kholisrag/do-firewall-allowlister:{{ .Version }}
    docker pull kholisrag/do-firewall-allowlister:latest
    ```

    ### Quay.io
    ```bash
    docker pull quay.io/kholisrag/do-firewall-allowlister:{{ .Version }}
    docker pull quay.io/kholisrag/do-firewall-allowlister:latest
    ```

    ## Installation

    ### Using Go
    ```bash
    go install github.com/kholisrag/do-firewall-allowlister/cmd/do-firewall-allowlister@{{ .Version }}
    ```

    ### Using Task
    ```bash
    task install
    ```

    ---

    **Full Changelog**: https://github.com/kholisrag/do-firewall-allowlister/compare/{{ .PreviousTag }}...{{ .Tag }}

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
